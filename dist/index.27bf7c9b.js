const gameArea=document.querySelector(".game-area"),foundationsDisplay=Array.from(document.getElementsByClassName("foundations-pile")),wasteDisplay=document.querySelector(".waste-pile"),stockDisplay=document.querySelector(".stock-pile"),tableauDisplay=Array.from(document.getElementsByClassName("tableau-pile")),placeholders=Array.from(document.getElementsByClassName("placeholder")),hiddenCards=document.getElementsByClassName("hidden"),btnUndo=document.getElementById("btn-undo"),btnPauseStart=document.getElementById("btn-pause-start"),btnRestart=document.getElementById("btn-restart"),btnNewGame=document.getElementById("btn-new-game"),minutesDisplay=document.getElementById("minutes"),secondsDisplay=document.getElementById("seconds"),scoreDisplay=document.getElementById("score"),movesDisplay=document.getElementById("moves"),winningMessage=document.querySelector(".winning-message");let foundations,waste,stock,tableau,score,moves,seconds,minutes,clock,thisGameDeck,stopLoop,stockHasOneRound,selectedCard,selectedCardDisplay,cardIndex,originArray,destinationArray,originPileDisplay,destinationPileDisplay,amountMovedCards,lastMove,lastMovedCard,prevCardHidden,deck=[],isLastTableauPileCard=!0,longestPileLength=0;function reset(){foundations=[[],[],[],[]],waste=[],stock=[],tableau=[],minutes=0,seconds=0,score=0,moves=0,stockHasOneRound=!1,minutesDisplay.textContent="00",secondsDisplay.textContent="00",scoreDisplay.textContent="0",movesDisplay.textContent="0",foundationsDisplay.forEach((e=>e.style.cursor="default")),tableauDisplay.forEach((e=>e.style.cursor="default")),gameArea.style.marginBottom="42px",winningMessage.style.display="none"}function startGame(){reset(),clearInterval(clock),createCards(),shuffleCards(),distributeCards(),displayCards()}function restartGame(){reset(),clearInterval(clock),distributeCards(),displayCards()}function createCards(){["hearts","diamonds","spades","clubs"].forEach((e=>{for(let a=0;a<13;a++)deck.push({suit:e,value:a+1,color:"hearts"===e||"diamonds"===e?"red":"black",imageSrc:`./images/deck/${e}-${a+1}.png`})}))}function shuffleCards(){deck.forEach(((e,a)=>{const s=Math.floor(Math.random()*deck.length);let t;t=deck[s],deck[s]=deck[a],deck[a]=t})),thisGameDeck=deck.map((e=>e))}function distributeCards(){deck=thisGameDeck.map((e=>e));for(let e=0;e<7;e++)tableau.push(deck.splice(0,e+1));stock=deck.splice(0,deck.length),stock.forEach((e=>{e.position="stock"}))}function displayCards(){tableau.forEach(((e,a)=>{let s="";e.forEach(((a,t)=>{s+=t===e.length-1?`<img src="${a.imageSrc}" class="card"/>`:'<img src="./images/card-back.png" class="card hidden"/>'})),tableauDisplay[a].innerHTML=s,alignTableauCards(tableauDisplay[a]),tableauDisplay[a].addEventListener("click",moveCard)})),stockDisplay.innerHTML='<img src="./images/card-back.png" class="card"/>',stockDisplay.addEventListener("click",turnStockCard),wasteDisplay.innerHTML="",foundationsDisplay.forEach((e=>{e.innerHTML="",e.addEventListener("click",moveCard)}))}function alignTableauCards(e){const a=Array.from(e.children);let s=1,t=0;a.forEach((e=>{e.style.zIndex=s,e.style.top=`${t}px`,s++,t+=30})),a.length>longestPileLength&&a.length>5&&(longestPileLength=a.length,gameArea.style.marginBottom=30*(longestPileLength-6)+150+42+"px")}function updateCardsDisplay(){if(isLastTableauPileCard)destinationPileDisplay.appendChild(selectedCardDisplay);else for(let e=0;e<amountMovedCards;e++)destinationPileDisplay.appendChild(originPileDisplay.children[cardIndex]);destinationPileDisplay.classList.contains("tableau-pile")?alignTableauCards(destinationPileDisplay):(selectedCardDisplay.style.zIndex=destinationArray.length,selectedCardDisplay.style.top="0px"),originPileDisplay.children[cardIndex-1]&&originPileDisplay.children[cardIndex-1].classList.contains("hidden")?(originPileDisplay.children[cardIndex-1].classList.remove("hidden"),originPileDisplay.children[cardIndex-1].setAttribute("src",originArray[cardIndex-1].imageSrc),prevCardHidden=!0):prevCardHidden=!1}function updateArrays(){if(destinationPileDisplay.classList.contains("foundations-pile")){amountMovedCards=originArray.length-cardIndex;const e=originArray.pop();destinationArray.push(e)}else if(destinationPileDisplay.classList.contains("tableau-pile")){amountMovedCards=originArray.length-cardIndex;const e=originArray.splice(cardIndex,amountMovedCards);destinationArray.push(...e)}updateCardsDisplay()}function turnStockCard(){if(btnUndo.addEventListener("click",undoLastMove),btnUndo.classList.remove("inactive"),lastMove="turn stock card",moves++,movesDisplay.textContent=moves,1===moves&&startClock(),selectedCardDisplay&&(selectedCardDisplay.classList.remove("card-active"),selectedCardDisplay=null),wasteDisplay.addEventListener("click",moveCard),stock.length>0){const e=stock.pop();waste.push(e);const a=document.createElement("img");a.setAttribute("src",e.imageSrc),a.classList.add("card"),a.style.zIndex=waste.length,wasteDisplay.appendChild(a),0===stock.length&&0!==waste.length&&(stockDisplay.innerHTML="↻",stockHasOneRound=!0),0===stock.length&&0===waste.length&&(stockDisplay.innerHTML="")}else 0===stock.length&&(waste.forEach((e=>stock.unshift(e))),waste=[],stock.length>0&&(stockDisplay.innerHTML='<img src="./images/card-back.png" class="card"/>'),wasteDisplay.innerHTML="",wasteDisplay.removeEventListener("click",moveCard))}function moveCard(e){if(selectedCardDisplay){if(selectedCardDisplay){if(e.target===selectedCardDisplay)return selectedCardDisplay.classList.remove("card-active"),selectedCardDisplay=null,foundationsDisplay.forEach((e=>e.style.cursor="default")),void tableauDisplay.forEach((e=>e.style.cursor="default"));destinationPileDisplay=e.target.classList.contains("card")?e.target.parentNode:e.target,findDestinationArray(),isMoveValid()?(updateArrays(),updateScore("make move"),moves++,movesDisplay.textContent=moves,1===moves&&startClock(),foundationsDisplay.forEach((e=>e.style.cursor="default")),tableauDisplay.forEach((e=>e.style.cursor="default")),btnUndo.addEventListener("click",undoLastMove),btnUndo.classList.remove("inactive"),lastMove="move card",lastMovedCard=selectedCardDisplay,selectedCardDisplay.classList.remove("card-active"),selectedCardDisplay=null,gameIsWon()):e.target.classList.contains("card")&&!e.target.classList.contains("hidden")&&(selectedCardDisplay.classList.remove("card-active"),selectedCardDisplay=e.target,selectedCardDisplay.classList.add("card-active"),originPileDisplay=e.target.parentNode,findSelectedCard())}}else e.target.classList.contains("card")&&!e.target.classList.contains("hidden")&&(selectedCardDisplay=e.target,selectedCardDisplay.classList.add("card-active"),originPileDisplay=e.target.parentNode,findSelectedCard(),foundationsDisplay.forEach((e=>e.style.cursor="pointer")),tableauDisplay.forEach((e=>e.style.cursor="pointer")))}function findSelectedCard(){const e=placeholders.findIndex((e=>e===originPileDisplay));e<=3?(originArray=foundations[e],cardIndex=originArray.length-1):4===e?(originArray=waste,cardIndex=originArray.length-1):e>=6&&(originArray=tableau[e-6],cardIndex=Array.from(placeholders[e].children).findIndex((e=>e===selectedCardDisplay))),selectedCard=originArray[cardIndex]}function findDestinationArray(){const e=placeholders.findIndex((e=>e===destinationPileDisplay));e<=3?destinationArray=foundations[e]:4===e?destinationArray=waste:e>=6&&(destinationArray=tableau[e-6])}function isMoveValid(){const e=originArray.length-1,a=destinationArray[destinationArray.length-1];return isLastTableauPileCard=!originPileDisplay.classList.contains("tableau-pile")||selectedCardDisplay===originPileDisplay.children[e],destinationPileDisplay.classList.contains("tableau-pile")?0===destinationArray.length&&13===selectedCard.value||!(!a||selectedCard.color===a.color||selectedCard.value!==a.value-1):destinationPileDisplay.classList.contains("foundations-pile")?!!isLastTableauPileCard&&(0===destinationArray.length&&1===selectedCard.value||!(!a||selectedCard.suit!==a.suit||selectedCard.value!==a.value+1)):void 0}function undoLastMove(){if("turn stock card"===lastMove)if(0===waste.length&stockHasOneRound){stock.forEach((e=>waste.unshift(e))),stock=[];const e=waste[waste.length-1];wasteDisplay.innerHTML=`<img src="${e.imageSrc}" class="card"/>`,stockDisplay.innerHTML="↻"}else 1===stock.length&&stockHasOneRound?(wasteDisplay.innerHTML="",stockDisplay.innerHTML='<img src="./images/card-back.png" class="card"/>'):waste.length>0&&(stock.push(waste.pop()),wasteDisplay.removeChild(wasteDisplay.children[wasteDisplay.children.length-1]),1===stock.length&&(stockDisplay.innerHTML='<img src="./images/card-back.png" class="card"/>'));else if("move card"===lastMove)if(originPileDisplay.classList.contains("foundations-pile")||originPileDisplay.classList.contains("waste-pile"))originArray.push(destinationArray.pop()),originPileDisplay.appendChild(lastMovedCard),lastMovedCard.style.zIndex=originArray.length,lastMovedCard.style.top="0px";else if(originPileDisplay.classList.contains("tableau-pile")){const e=destinationArray.length-amountMovedCards;originArray.push(...destinationArray.splice(e,amountMovedCards));for(let a=0;a<amountMovedCards;a++)originPileDisplay.appendChild(destinationPileDisplay.children[e]);prevCardHidden&&(originPileDisplay.children[cardIndex-1].classList.add("hidden"),originPileDisplay.children[cardIndex-1].setAttribute("src","./images/card-back.png")),alignTableauCards(originPileDisplay)}updateScore("undo move"),moves>0&&(btnUndo.removeEventListener("click",undoLastMove),btnUndo.classList.add("inactive")),foundationsDisplay.forEach((e=>e.style.cursor="default")),tableauDisplay.forEach((e=>e.style.cursor="default"))}function gameIsWon(){foundations.every((e=>13===e.length))?(showWinningMessage(),clearInterval(clock)):0===hiddenCards.length&&0===stock.length&&0===waste.length&&automateMoves()}function automateMoves(){let e=setInterval((()=>{for(let e=0;e<tableau.length;e++){stopLoop=!1;for(let a=0;a<foundations.length;a++){const s=tableau[e].length-1,t=foundations[a]?foundations[a].length-1:0;if(tableau[e].length>0&&1===tableau[e][s].value&&0===foundations[a].length){const t=tableauDisplay[e].children[s];foundationsDisplay[a].appendChild(t),t.style.top="0px",t.style.zIndex=foundationsDisplay[a].children.length,foundations[a].push(tableau[e].pop()),stopLoop=!0,score+=10,moves++,scoreDisplay.textContent=score,movesDisplay.textContent=moves;break}if(tableau[e].length>0&&tableau[e][s].suit===foundations[a][t].suit&&tableau[e][s].value===foundations[a][t].value+1){const t=tableauDisplay[e].children[s];foundationsDisplay[a].appendChild(t),t.style.top="0px",t.style.zIndex=foundationsDisplay[a].children.length,foundations[a].push(tableau[e].pop()),stopLoop=!0,score+=10,moves++,scoreDisplay.textContent=score,movesDisplay.textContent=moves;break}}if(stopLoop)break}foundations.every((e=>13===e.length))&&(clearInterval(e),clearInterval(clock),showWinningMessage())}),100)}function updateScore(e){"make move"===e?(prevCardHidden&&(score+=5),originPileDisplay.classList.contains("waste-pile")&&destinationPileDisplay.classList.contains("tableau-pile")&&(score+=5),originPileDisplay.classList.contains("foundations-pile")&&destinationPileDisplay.classList.contains("tableau-pile")&&(score-=15),(originPileDisplay.classList.contains("waste-pile")||originPileDisplay.classList.contains("tableau-pile"))&&destinationPileDisplay.classList.contains("foundations-pile")&&(score+=10)):"undo move"===e&&"move card"===lastMove&&(prevCardHidden&&(score-=5),originPileDisplay.classList.contains("waste-pile")&&destinationPileDisplay.classList.contains("tableau-pile")&&(score-=5),originPileDisplay.classList.contains("foundations-pile")&&destinationPileDisplay.classList.contains("tableau-pile")&&(score+=15),(originPileDisplay.classList.contains("waste-pile")||originPileDisplay.classList.contains("tableau-pile"))&&destinationPileDisplay.classList.contains("foundations-pile")&&(score-=10)),scoreDisplay.textContent=score}function pauseStartGame(){btnPauseStart.classList.contains("pause")&&moves>0?(clearInterval(clock),btnPauseStart.classList.remove("pause"),btnPauseStart.classList.add("play"),btnPauseStart.setAttribute("src","./images/play-btn.svg"),foundationsDisplay.forEach((e=>e.removeEventListener("click",moveCard))),tableauDisplay.forEach((e=>e.removeEventListener("click",moveCard))),wasteDisplay.removeEventListener("click",moveCard),stockDisplay.removeEventListener("click",turnStockCard)):btnPauseStart.classList.contains("play")&&(clock=setInterval((()=>{seconds++,60===seconds&&(minutes++,seconds=0),minutesDisplay.textContent=minutes>=10?minutes:`0${minutes}`,secondsDisplay.textContent=seconds>=10?seconds:`0${seconds}`}),1e3),btnPauseStart.classList.remove("play"),btnPauseStart.classList.add("pause"),btnPauseStart.setAttribute("src","./images/pause-btn.svg"),foundationsDisplay.forEach((e=>e.addEventListener("click",moveCard))),tableauDisplay.forEach((e=>e.addEventListener("click",moveCard))),waste.length>0&&wasteDisplay.addEventListener("click",moveCard),stockDisplay.addEventListener("click",turnStockCard))}function startClock(){clock=setInterval((()=>{seconds++,60===seconds&&(minutes++,seconds=0),minutesDisplay.textContent=minutes>=10?minutes:`0${minutes}`,secondsDisplay.textContent=seconds>=10?seconds:`0${seconds}`}),1e3)}function showWinningMessage(){gameArea.style.marginBottom="42px",winningMessage.style.display="block",winningMessage.innerHTML=`\n        <h3 class="congrats"> Congratulations, you won! </h3>\n        <div class="stats"> \n            <span>${minutesDisplay.textContent}:${secondsDisplay.textContent}</span>\n            <span>|</span>\n            <span>${score} points</span>\n            <span>|</span>\n            <span>${moves} moves</span>\n        </div>\n        <button class="btn btn-popup" id="btn-play-again">Play Again</button>\n    `,document.getElementById("btn-play-again").addEventListener("click",startGame)}btnUndo.addEventListener("click",undoLastMove),btnPauseStart.addEventListener("click",pauseStartGame),btnRestart.addEventListener("click",restartGame),btnNewGame.addEventListener("click",startGame),startGame();
//# sourceMappingURL=index.27bf7c9b.js.map
